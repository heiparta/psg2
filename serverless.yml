service: psg2

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs4.3

  environment:
    MODELS_TABLE: ${self:service}-${opt:stage, self:provider.stage}-models

  stage: dev
  region: eu-west-1

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
    - Effect: "Allow"
      Action:
        - "s3:PutObject"
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:s3:::"
            - "Ref" : "ServerlessDeploymentBucket"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.MODELS_TABLE}"

#package:
  #include:
    #- src/**
  #exclude:
    #- exclude-me.js
    #- exclude-me-dir/**

functions:
  series-list:
    handler: src/series.list
    events:
      - http:
          path: series
          method: get
    environment:
      MODELS_TABLE: "${self:provider.environment.MODELS_TABLE}"
  series-get:
    handler: src/series.handler
    events:
      - http:
          path: series/{id}
          method: get
  series-create:
    handler: src/series.create
    events:
      - http:
          path: series
          method: post
    environment:
      MODELS_TABLE: "${self:provider.environment.MODELS_TABLE}"

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
#

resources:
  Resources:
    ModelsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
          -
            AttributeName: modified
            AttributeType: N
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
          -
            AttributeName: modified
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.MODELS_TABLE}
